//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from G.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SQLParser.Parsers.TSql {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class GBaseListener : IGListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.singleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleExpression([NotNull] GParser.SingleExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.singleExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleExpression([NotNull] GParser.SingleExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery([NotNull] GParser.QueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery([NotNull] GParser.QueryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryNoWith"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryNoWith([NotNull] GParser.QueryNoWithContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryNoWith"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryNoWith([NotNull] GParser.QueryNoWithContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryOrganization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryOrganization([NotNull] GParser.QueryOrganizationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryOrganization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryOrganization([NotNull] GParser.QueryOrganizationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryTerm([NotNull] GParser.QueryTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryTerm([NotNull] GParser.QueryTermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQueryPrimary([NotNull] GParser.QueryPrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQueryPrimary([NotNull] GParser.QueryPrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.sortSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSortSet([NotNull] GParser.SortSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.sortSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSortSet([NotNull] GParser.SortSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.sortItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSortItem([NotNull] GParser.SortItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.sortItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSortItem([NotNull] GParser.SortItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.querySpecification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuerySpecification([NotNull] GParser.QuerySpecificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.querySpecification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuerySpecification([NotNull] GParser.QuerySpecificationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.fromClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFromClause([NotNull] GParser.FromClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.fromClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFromClause([NotNull] GParser.FromClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhereClause([NotNull] GParser.WhereClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhereClause([NotNull] GParser.WhereClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.groupByClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupByClause([NotNull] GParser.GroupByClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.groupByClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupByClause([NotNull] GParser.GroupByClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.havingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHavingClause([NotNull] GParser.HavingClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.havingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHavingClause([NotNull] GParser.HavingClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.aggregation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregation([NotNull] GParser.AggregationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.aggregation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregation([NotNull] GParser.AggregationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.setQuantifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetQuantifier([NotNull] GParser.SetQuantifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.setQuantifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetQuantifier([NotNull] GParser.SetQuantifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.relation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelation([NotNull] GParser.RelationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.relation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelation([NotNull] GParser.RelationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.joinType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinType([NotNull] GParser.JoinTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.joinType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinType([NotNull] GParser.JoinTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.joinCriteria"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinCriteria([NotNull] GParser.JoinCriteriaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.joinCriteria"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinCriteria([NotNull] GParser.JoinCriteriaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.relationPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationPrimary([NotNull] GParser.RelationPrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.relationPrimary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationPrimary([NotNull] GParser.RelationPrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.tableIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTableIdentifier([NotNull] GParser.TableIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.tableIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTableIdentifier([NotNull] GParser.TableIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.namedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedExpression([NotNull] GParser.NamedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.namedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedExpression([NotNull] GParser.NamedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.namedExpressionSeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedExpressionSeq([NotNull] GParser.NamedExpressionSeqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.namedExpressionSeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedExpressionSeq([NotNull] GParser.NamedExpressionSeqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] GParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] GParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.booleanExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExpression([NotNull] GParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.booleanExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExpression([NotNull] GParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.predicated"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicated([NotNull] GParser.PredicatedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.predicated"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicated([NotNull] GParser.PredicatedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicate([NotNull] GParser.PredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicate([NotNull] GParser.PredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.valueExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueExpression([NotNull] GParser.ValueExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.valueExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueExpression([NotNull] GParser.ValueExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpression([NotNull] GParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpression([NotNull] GParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] GParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] GParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperator([NotNull] GParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperator([NotNull] GParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.booleanValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanValue([NotNull] GParser.BooleanValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.booleanValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanValue([NotNull] GParser.BooleanValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.dataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataType([NotNull] GParser.DataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.dataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataType([NotNull] GParser.DataTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.whenClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhenClause([NotNull] GParser.WhenClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.whenClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhenClause([NotNull] GParser.WhenClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.qualifiedName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualifiedName([NotNull] GParser.QualifiedNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.qualifiedName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualifiedName([NotNull] GParser.QualifiedNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] GParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] GParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.strictIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStrictIdentifier([NotNull] GParser.StrictIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.strictIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStrictIdentifier([NotNull] GParser.StrictIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.quotedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuotedIdentifier([NotNull] GParser.QuotedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.quotedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuotedIdentifier([NotNull] GParser.QuotedIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] GParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] GParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.nonReserved"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNonReserved([NotNull] GParser.NonReservedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.nonReserved"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNonReserved([NotNull] GParser.NonReservedContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace SQLParser.Parsers.TSql
