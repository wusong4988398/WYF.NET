//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from G.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SQLParser.Parsers.TSql {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IGListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleExpression([NotNull] GParser.SingleExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleExpression([NotNull] GParser.SingleExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery([NotNull] GParser.QueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery([NotNull] GParser.QueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryNoWith"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryNoWith([NotNull] GParser.QueryNoWithContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryNoWith"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryNoWith([NotNull] GParser.QueryNoWithContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryOrganization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryOrganization([NotNull] GParser.QueryOrganizationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryOrganization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryOrganization([NotNull] GParser.QueryOrganizationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryTerm([NotNull] GParser.QueryTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryTerm([NotNull] GParser.QueryTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.queryPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryPrimary([NotNull] GParser.QueryPrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.queryPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryPrimary([NotNull] GParser.QueryPrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.sortSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortSet([NotNull] GParser.SortSetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.sortSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortSet([NotNull] GParser.SortSetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.sortItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSortItem([NotNull] GParser.SortItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.sortItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSortItem([NotNull] GParser.SortItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.querySpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuerySpecification([NotNull] GParser.QuerySpecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.querySpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuerySpecification([NotNull] GParser.QuerySpecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.fromClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromClause([NotNull] GParser.FromClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.fromClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromClause([NotNull] GParser.FromClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] GParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] GParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.groupByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupByClause([NotNull] GParser.GroupByClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.groupByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupByClause([NotNull] GParser.GroupByClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.havingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHavingClause([NotNull] GParser.HavingClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.havingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHavingClause([NotNull] GParser.HavingClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.aggregation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregation([NotNull] GParser.AggregationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.aggregation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregation([NotNull] GParser.AggregationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.setQuantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetQuantifier([NotNull] GParser.SetQuantifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.setQuantifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetQuantifier([NotNull] GParser.SetQuantifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelation([NotNull] GParser.RelationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.relation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelation([NotNull] GParser.RelationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.joinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinType([NotNull] GParser.JoinTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.joinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinType([NotNull] GParser.JoinTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.joinCriteria"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinCriteria([NotNull] GParser.JoinCriteriaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.joinCriteria"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinCriteria([NotNull] GParser.JoinCriteriaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.relationPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationPrimary([NotNull] GParser.RelationPrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.relationPrimary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationPrimary([NotNull] GParser.RelationPrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.tableIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableIdentifier([NotNull] GParser.TableIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.tableIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableIdentifier([NotNull] GParser.TableIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.namedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedExpression([NotNull] GParser.NamedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.namedExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedExpression([NotNull] GParser.NamedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.namedExpressionSeq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedExpressionSeq([NotNull] GParser.NamedExpressionSeqContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.namedExpressionSeq"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedExpressionSeq([NotNull] GParser.NamedExpressionSeqContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] GParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] GParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpression([NotNull] GParser.BooleanExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpression([NotNull] GParser.BooleanExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.predicated"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicated([NotNull] GParser.PredicatedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.predicated"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicated([NotNull] GParser.PredicatedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicate([NotNull] GParser.PredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicate([NotNull] GParser.PredicateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueExpression([NotNull] GParser.ValueExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.valueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueExpression([NotNull] GParser.ValueExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExpression([NotNull] GParser.PrimaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExpression([NotNull] GParser.PrimaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] GParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] GParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonOperator([NotNull] GParser.ComparisonOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonOperator([NotNull] GParser.ComparisonOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.booleanValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanValue([NotNull] GParser.BooleanValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.booleanValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanValue([NotNull] GParser.BooleanValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataType([NotNull] GParser.DataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataType([NotNull] GParser.DataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.whenClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhenClause([NotNull] GParser.WhenClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.whenClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhenClause([NotNull] GParser.WhenClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedName([NotNull] GParser.QualifiedNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedName([NotNull] GParser.QualifiedNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] GParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] GParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.strictIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrictIdentifier([NotNull] GParser.StrictIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.strictIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrictIdentifier([NotNull] GParser.StrictIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.quotedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuotedIdentifier([NotNull] GParser.QuotedIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.quotedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuotedIdentifier([NotNull] GParser.QuotedIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] GParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] GParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="GParser.nonReserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonReserved([NotNull] GParser.NonReservedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GParser.nonReserved"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonReserved([NotNull] GParser.NonReservedContext context);
}
} // namespace SQLParser.Parsers.TSql
